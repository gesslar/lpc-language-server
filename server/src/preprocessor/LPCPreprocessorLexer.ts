// Generated from grammar/LPCPreprocessorLexer.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class LPCPreprocessorLexer extends antlr.Lexer {
    public static readonly SHARP = 1;
    public static readonly CODE = 2;
    public static readonly INCLUDE = 3;
    public static readonly PRAGMA = 4;
    public static readonly DEFINE = 5;
    public static readonly DEFINED = 6;
    public static readonly IF = 7;
    public static readonly ELIF = 8;
    public static readonly ELSE = 9;
    public static readonly UNDEF = 10;
    public static readonly IFDEF = 11;
    public static readonly IFNDEF = 12;
    public static readonly ENDIF = 13;
    public static readonly BANG = 14;
    public static readonly LPAREN = 15;
    public static readonly RPAREN = 16;
    public static readonly EQUAL = 17;
    public static readonly NOTEQUAL = 18;
    public static readonly AND = 19;
    public static readonly OR = 20;
    public static readonly LT = 21;
    public static readonly GT = 22;
    public static readonly LE = 23;
    public static readonly GE = 24;
    public static readonly STAR = 25;
    public static readonly PLUS = 26;
    public static readonly MINUS = 27;
    public static readonly DIRECTIVE_WHITESPACES = 28;
    public static readonly DIRECTIVE_STRING = 29;
    public static readonly CONDITIONAL_SYMBOL = 30;
    public static readonly DECIMAL_LITERAL = 31;
    public static readonly FLOAT = 32;
    public static readonly NEW_LINE = 33;
    public static readonly DIRECITVE_COMMENT = 34;
    public static readonly DIRECITVE_LINE_COMMENT = 35;
    public static readonly DIRECITVE_NEW_LINE = 36;
    public static readonly DIRECITVE_TEXT_NEW_LINE = 37;
    public static readonly TEXT = 38;
    public static readonly SLASH = 39;
    public static readonly DIRECTIVE_STRING_QUOTE = 40;
    public static readonly DIRECTIVE_MODE = 1;
    public static readonly DIRECTIVE_DEFINE = 2;
    public static readonly DIRECTIVE_TEXT = 3;
    public static readonly DIRECTIVE_STRING_MODE = 4;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS_CHANNEL"
    ];

    public static readonly literalNames = [
        null, "'#'", null, null, "'pragma'", null, "'defined'", "'if'", 
        "'elif'", "'else'", "'undef'", "'ifdef'", "'ifndef'", "'endif'", 
        "'!'", "'('", "')'", "'=='", "'!='", "'&&'", "'||'", "'<'", "'>'", 
        "'<='", "'>='", "'*'", "'+'", "'-'", null, null, null, null, null, 
        null, null, null, null, null, null, "'/'", "'\"'"
    ];

    public static readonly symbolicNames = [
        null, "SHARP", "CODE", "INCLUDE", "PRAGMA", "DEFINE", "DEFINED", 
        "IF", "ELIF", "ELSE", "UNDEF", "IFDEF", "IFNDEF", "ENDIF", "BANG", 
        "LPAREN", "RPAREN", "EQUAL", "NOTEQUAL", "AND", "OR", "LT", "GT", 
        "LE", "GE", "STAR", "PLUS", "MINUS", "DIRECTIVE_WHITESPACES", "DIRECTIVE_STRING", 
        "CONDITIONAL_SYMBOL", "DECIMAL_LITERAL", "FLOAT", "NEW_LINE", "DIRECITVE_COMMENT", 
        "DIRECITVE_LINE_COMMENT", "DIRECITVE_NEW_LINE", "DIRECITVE_TEXT_NEW_LINE", 
        "TEXT", "SLASH", "DIRECTIVE_STRING_QUOTE"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE", "DIRECTIVE_MODE", "DIRECTIVE_DEFINE", "DIRECTIVE_TEXT", 
        "DIRECTIVE_STRING_MODE",
    ];

    public static readonly ruleNames = [
        "SHARP", "COMMENT", "LINE_COMMENT", "SLASH", "CHARACTER_LITERAL", 
        "STRING", "CODE", "INCLUDE", "PRAGMA", "DEFINE", "DEFINED", "IF", 
        "ELIF", "ELSE", "UNDEF", "IFDEF", "IFNDEF", "ENDIF", "BANG", "LPAREN", 
        "RPAREN", "EQUAL", "NOTEQUAL", "AND", "OR", "LT", "GT", "LE", "GE", 
        "STAR", "PLUS", "MINUS", "DIRECTIVE_WHITESPACES", "DIRECTIVE_STRING", 
        "CONDITIONAL_SYMBOL", "DECIMAL_LITERAL", "FLOAT", "NEW_LINE", "DIRECITVE_COMMENT", 
        "DIRECITVE_LINE_COMMENT", "DIRECITVE_NEW_LINE", "DIRECTIVE_DEFINE_CONDITIONAL_SYMBOL", 
        "DIRECITVE_TEXT_NEW_LINE", "BACK_SLASH_ESCAPE", "TEXT_NEW_LINE", 
        "DIRECTIVE_COMMENT", "DIRECTIVE_LINE_COMMENT", "DIRECTIVE_SLASH", 
        "DIRECTIVE_QUOTE", "TEXT", "DIRECTIVE_STRING_ESCAPE", "DIRECTIVE_STRING_QUOTE", 
        "DIRECTIVE_STRING_TEXT", "EscapeSequence", "OctalEscape", "UnicodeEscape", 
        "HexDigit", "StringFragment", "LETTER", "A", "B", "C", "D", "E", 
        "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", 
        "S", "T", "U", "V", "W", "X", "Y", "Z",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, LPCPreprocessorLexer._ATN, LPCPreprocessorLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "LPCPreprocessorLexer.g4"; }

    public get literalNames(): (string | null)[] { return LPCPreprocessorLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return LPCPreprocessorLexer.symbolicNames; }
    public get ruleNames(): string[] { return LPCPreprocessorLexer.ruleNames; }

    public get serializedATN(): number[] { return LPCPreprocessorLexer._serializedATN; }

    public get channelNames(): string[] { return LPCPreprocessorLexer.channelNames; }

    public get modeNames(): string[] { return LPCPreprocessorLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,40,626,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,
        7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,
        11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,
        17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,
        24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,
        30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,
        37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,
        43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,
        50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,
        56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
        63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,
        69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,
        76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,
        82,2,83,7,83,2,84,7,84,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,184,8,
        1,10,1,12,1,187,9,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,198,
        8,2,10,2,12,2,201,9,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,3,4,212,
        8,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,4,6,225,8,6,11,6,
        12,6,226,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,4,7,238,8,7,11,7,12,
        7,239,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,4,9,261,8,9,11,9,12,9,262,1,9,1,9,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
        12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,
        15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,
        21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,
        26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,
        32,4,32,348,8,32,11,32,12,32,349,1,32,1,32,1,33,1,33,1,34,1,34,1,
        34,5,34,359,8,34,10,34,12,34,362,9,34,1,35,4,35,365,8,35,11,35,12,
        35,366,1,36,4,36,370,8,36,11,36,12,36,371,1,36,1,36,5,36,376,8,36,
        10,36,12,36,379,9,36,1,36,1,36,4,36,383,8,36,11,36,12,36,384,3,36,
        387,8,36,1,37,3,37,390,8,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,
        38,5,38,400,8,38,10,38,12,38,403,9,38,1,38,1,38,1,38,1,38,1,38,1,
        39,1,39,1,39,1,39,5,39,414,8,39,10,39,12,39,417,9,39,1,39,1,39,1,
        40,1,40,3,40,423,8,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,5,41,432,
        8,41,10,41,12,41,435,9,41,1,41,1,41,1,41,5,41,440,8,41,10,41,12,
        41,443,9,41,1,41,3,41,446,8,41,1,41,1,41,1,41,1,42,1,42,3,42,453,
        8,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,3,44,465,
        8,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,5,45,476,8,45,
        10,45,12,45,479,9,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,
        1,46,5,46,491,8,46,10,46,12,46,494,9,46,1,46,1,46,1,46,1,47,1,47,
        1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,4,49,510,8,49,11,49,
        12,49,511,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,
        4,52,525,8,52,11,52,12,52,526,1,52,1,52,1,53,1,53,1,53,1,53,3,53,
        535,8,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,3,54,546,8,
        54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,
        57,5,57,561,8,57,10,57,12,57,564,9,57,1,57,1,57,1,58,1,58,1,58,1,
        58,1,58,3,58,573,8,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,
        63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,
        69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,
        76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,
        82,1,83,1,83,1,84,1,84,3,185,401,477,0,85,5,1,7,0,9,0,11,39,13,0,
        15,0,17,2,19,3,21,4,23,5,25,6,27,7,29,8,31,9,33,10,35,11,37,12,39,
        13,41,14,43,15,45,16,47,17,49,18,51,19,53,20,55,21,57,22,59,23,61,
        24,63,25,65,26,67,27,69,28,71,29,73,30,75,31,77,32,79,33,81,34,83,
        35,85,36,87,0,89,37,91,0,93,0,95,0,97,0,99,0,101,0,103,38,105,0,
        107,40,109,0,111,0,113,0,115,0,117,0,119,0,121,0,123,0,125,0,127,
        0,129,0,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,0,149,
        0,151,0,153,0,155,0,157,0,159,0,161,0,163,0,165,0,167,0,169,0,171,
        0,173,0,5,0,1,2,3,4,47,2,0,10,10,13,13,2,0,39,39,92,92,1,0,35,35,
        3,0,34,35,39,39,47,47,2,0,9,9,32,32,2,0,45,45,48,57,1,0,48,57,5,
        0,9,9,32,32,44,44,46,46,48,57,2,0,42,42,47,47,5,0,10,10,13,13,34,
        34,47,47,92,92,4,0,10,10,13,13,34,34,92,92,8,0,34,34,39,39,92,92,
        97,98,102,102,110,110,114,114,116,116,1,0,48,51,1,0,48,55,3,0,48,
        57,65,70,97,102,2,0,34,34,92,92,4,0,36,36,65,90,95,95,97,122,2,0,
        0,255,55296,56319,1,0,55296,56319,1,0,56320,57343,1,0,233,233,2,
        0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,
        2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
        104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,
        0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,
        111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,
        83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,
        2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,
        122,122,628,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,1,19,1,0,0,0,1,21,1,0,0,0,1,23,
        1,0,0,0,1,25,1,0,0,0,1,27,1,0,0,0,1,29,1,0,0,0,1,31,1,0,0,0,1,33,
        1,0,0,0,1,35,1,0,0,0,1,37,1,0,0,0,1,39,1,0,0,0,1,41,1,0,0,0,1,43,
        1,0,0,0,1,45,1,0,0,0,1,47,1,0,0,0,1,49,1,0,0,0,1,51,1,0,0,0,1,53,
        1,0,0,0,1,55,1,0,0,0,1,57,1,0,0,0,1,59,1,0,0,0,1,61,1,0,0,0,1,63,
        1,0,0,0,1,65,1,0,0,0,1,67,1,0,0,0,1,69,1,0,0,0,1,71,1,0,0,0,1,73,
        1,0,0,0,1,75,1,0,0,0,1,77,1,0,0,0,1,79,1,0,0,0,1,81,1,0,0,0,1,83,
        1,0,0,0,1,85,1,0,0,0,2,87,1,0,0,0,3,89,1,0,0,0,3,91,1,0,0,0,3,93,
        1,0,0,0,3,95,1,0,0,0,3,97,1,0,0,0,3,99,1,0,0,0,3,101,1,0,0,0,3,103,
        1,0,0,0,4,105,1,0,0,0,4,107,1,0,0,0,4,109,1,0,0,0,5,175,1,0,0,0,
        7,179,1,0,0,0,9,193,1,0,0,0,11,204,1,0,0,0,13,208,1,0,0,0,15,217,
        1,0,0,0,17,224,1,0,0,0,19,228,1,0,0,0,21,243,1,0,0,0,23,252,1,0,
        0,0,25,266,1,0,0,0,27,274,1,0,0,0,29,277,1,0,0,0,31,282,1,0,0,0,
        33,287,1,0,0,0,35,293,1,0,0,0,37,299,1,0,0,0,39,306,1,0,0,0,41,312,
        1,0,0,0,43,314,1,0,0,0,45,316,1,0,0,0,47,318,1,0,0,0,49,321,1,0,
        0,0,51,324,1,0,0,0,53,327,1,0,0,0,55,330,1,0,0,0,57,332,1,0,0,0,
        59,334,1,0,0,0,61,337,1,0,0,0,63,340,1,0,0,0,65,342,1,0,0,0,67,344,
        1,0,0,0,69,347,1,0,0,0,71,353,1,0,0,0,73,355,1,0,0,0,75,364,1,0,
        0,0,77,386,1,0,0,0,79,389,1,0,0,0,81,395,1,0,0,0,83,409,1,0,0,0,
        85,420,1,0,0,0,87,428,1,0,0,0,89,450,1,0,0,0,91,458,1,0,0,0,93,464,
        1,0,0,0,95,471,1,0,0,0,97,486,1,0,0,0,99,498,1,0,0,0,101,503,1,0,
        0,0,103,509,1,0,0,0,105,513,1,0,0,0,107,518,1,0,0,0,109,524,1,0,
        0,0,111,534,1,0,0,0,113,545,1,0,0,0,115,547,1,0,0,0,117,554,1,0,
        0,0,119,556,1,0,0,0,121,572,1,0,0,0,123,574,1,0,0,0,125,576,1,0,
        0,0,127,578,1,0,0,0,129,580,1,0,0,0,131,582,1,0,0,0,133,584,1,0,
        0,0,135,586,1,0,0,0,137,588,1,0,0,0,139,590,1,0,0,0,141,592,1,0,
        0,0,143,594,1,0,0,0,145,596,1,0,0,0,147,598,1,0,0,0,149,600,1,0,
        0,0,151,602,1,0,0,0,153,604,1,0,0,0,155,606,1,0,0,0,157,608,1,0,
        0,0,159,610,1,0,0,0,161,612,1,0,0,0,163,614,1,0,0,0,165,616,1,0,
        0,0,167,618,1,0,0,0,169,620,1,0,0,0,171,622,1,0,0,0,173,624,1,0,
        0,0,175,176,5,35,0,0,176,177,1,0,0,0,177,178,6,0,0,0,178,6,1,0,0,
        0,179,180,5,47,0,0,180,181,5,42,0,0,181,185,1,0,0,0,182,184,9,0,
        0,0,183,182,1,0,0,0,184,187,1,0,0,0,185,186,1,0,0,0,185,183,1,0,
        0,0,186,188,1,0,0,0,187,185,1,0,0,0,188,189,5,42,0,0,189,190,5,47,
        0,0,190,191,1,0,0,0,191,192,6,1,1,0,192,8,1,0,0,0,193,194,5,47,0,
        0,194,195,5,47,0,0,195,199,1,0,0,0,196,198,8,0,0,0,197,196,1,0,0,
        0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,202,1,0,0,
        0,201,199,1,0,0,0,202,203,6,2,1,0,203,10,1,0,0,0,204,205,5,47,0,
        0,205,206,1,0,0,0,206,207,6,3,1,0,207,12,1,0,0,0,208,211,5,39,0,
        0,209,212,3,111,53,0,210,212,8,1,0,0,211,209,1,0,0,0,211,210,1,0,
        0,0,212,213,1,0,0,0,213,214,8,2,0,0,214,215,1,0,0,0,215,216,6,4,
        1,0,216,14,1,0,0,0,217,218,3,119,57,0,218,219,1,0,0,0,219,220,6,
        5,1,0,220,16,1,0,0,0,221,225,8,3,0,0,222,223,5,35,0,0,223,225,5,
        39,0,0,224,221,1,0,0,0,224,222,1,0,0,0,225,226,1,0,0,0,226,224,1,
        0,0,0,226,227,1,0,0,0,227,18,1,0,0,0,228,229,5,105,0,0,229,230,5,
        110,0,0,230,231,5,99,0,0,231,232,5,108,0,0,232,233,5,117,0,0,233,
        234,5,100,0,0,234,235,5,101,0,0,235,237,1,0,0,0,236,238,7,4,0,0,
        237,236,1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,
        240,241,1,0,0,0,241,242,6,7,2,0,242,20,1,0,0,0,243,244,5,112,0,0,
        244,245,5,114,0,0,245,246,5,97,0,0,246,247,5,103,0,0,247,248,5,109,
        0,0,248,249,5,97,0,0,249,250,1,0,0,0,250,251,6,8,2,0,251,22,1,0,
        0,0,252,253,5,100,0,0,253,254,5,101,0,0,254,255,5,102,0,0,255,256,
        5,105,0,0,256,257,5,110,0,0,257,258,5,101,0,0,258,260,1,0,0,0,259,
        261,7,4,0,0,260,259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,
        263,1,0,0,0,263,264,1,0,0,0,264,265,6,9,3,0,265,24,1,0,0,0,266,267,
        5,100,0,0,267,268,5,101,0,0,268,269,5,102,0,0,269,270,5,105,0,0,
        270,271,5,110,0,0,271,272,5,101,0,0,272,273,5,100,0,0,273,26,1,0,
        0,0,274,275,5,105,0,0,275,276,5,102,0,0,276,28,1,0,0,0,277,278,5,
        101,0,0,278,279,5,108,0,0,279,280,5,105,0,0,280,281,5,102,0,0,281,
        30,1,0,0,0,282,283,5,101,0,0,283,284,5,108,0,0,284,285,5,115,0,0,
        285,286,5,101,0,0,286,32,1,0,0,0,287,288,5,117,0,0,288,289,5,110,
        0,0,289,290,5,100,0,0,290,291,5,101,0,0,291,292,5,102,0,0,292,34,
        1,0,0,0,293,294,5,105,0,0,294,295,5,102,0,0,295,296,5,100,0,0,296,
        297,5,101,0,0,297,298,5,102,0,0,298,36,1,0,0,0,299,300,5,105,0,0,
        300,301,5,102,0,0,301,302,5,110,0,0,302,303,5,100,0,0,303,304,5,
        101,0,0,304,305,5,102,0,0,305,38,1,0,0,0,306,307,5,101,0,0,307,308,
        5,110,0,0,308,309,5,100,0,0,309,310,5,105,0,0,310,311,5,102,0,0,
        311,40,1,0,0,0,312,313,5,33,0,0,313,42,1,0,0,0,314,315,5,40,0,0,
        315,44,1,0,0,0,316,317,5,41,0,0,317,46,1,0,0,0,318,319,5,61,0,0,
        319,320,5,61,0,0,320,48,1,0,0,0,321,322,5,33,0,0,322,323,5,61,0,
        0,323,50,1,0,0,0,324,325,5,38,0,0,325,326,5,38,0,0,326,52,1,0,0,
        0,327,328,5,124,0,0,328,329,5,124,0,0,329,54,1,0,0,0,330,331,5,60,
        0,0,331,56,1,0,0,0,332,333,5,62,0,0,333,58,1,0,0,0,334,335,5,60,
        0,0,335,336,5,61,0,0,336,60,1,0,0,0,337,338,5,62,0,0,338,339,5,61,
        0,0,339,62,1,0,0,0,340,341,5,42,0,0,341,64,1,0,0,0,342,343,5,43,
        0,0,343,66,1,0,0,0,344,345,5,45,0,0,345,68,1,0,0,0,346,348,7,4,0,
        0,347,346,1,0,0,0,348,349,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,
        0,350,351,1,0,0,0,351,352,6,32,4,0,352,70,1,0,0,0,353,354,3,119,
        57,0,354,72,1,0,0,0,355,360,3,121,58,0,356,359,3,121,58,0,357,359,
        7,5,0,0,358,356,1,0,0,0,358,357,1,0,0,0,359,362,1,0,0,0,360,358,
        1,0,0,0,360,361,1,0,0,0,361,74,1,0,0,0,362,360,1,0,0,0,363,365,7,
        6,0,0,364,363,1,0,0,0,365,366,1,0,0,0,366,364,1,0,0,0,366,367,1,
        0,0,0,367,76,1,0,0,0,368,370,7,6,0,0,369,368,1,0,0,0,370,371,1,0,
        0,0,371,369,1,0,0,0,371,372,1,0,0,0,372,373,1,0,0,0,373,377,5,46,
        0,0,374,376,7,6,0,0,375,374,1,0,0,0,376,379,1,0,0,0,377,375,1,0,
        0,0,377,378,1,0,0,0,378,387,1,0,0,0,379,377,1,0,0,0,380,382,5,46,
        0,0,381,383,7,6,0,0,382,381,1,0,0,0,383,384,1,0,0,0,384,382,1,0,
        0,0,384,385,1,0,0,0,385,387,1,0,0,0,386,369,1,0,0,0,386,380,1,0,
        0,0,387,78,1,0,0,0,388,390,5,13,0,0,389,388,1,0,0,0,389,390,1,0,
        0,0,390,391,1,0,0,0,391,392,5,10,0,0,392,393,1,0,0,0,393,394,6,37,
        5,0,394,80,1,0,0,0,395,396,5,47,0,0,396,397,5,42,0,0,397,401,1,0,
        0,0,398,400,9,0,0,0,399,398,1,0,0,0,400,403,1,0,0,0,401,402,1,0,
        0,0,401,399,1,0,0,0,402,404,1,0,0,0,403,401,1,0,0,0,404,405,5,42,
        0,0,405,406,5,47,0,0,406,407,1,0,0,0,407,408,6,38,6,0,408,82,1,0,
        0,0,409,410,5,47,0,0,410,411,5,47,0,0,411,415,1,0,0,0,412,414,8,
        0,0,0,413,412,1,0,0,0,414,417,1,0,0,0,415,413,1,0,0,0,415,416,1,
        0,0,0,416,418,1,0,0,0,417,415,1,0,0,0,418,419,6,39,6,0,419,84,1,
        0,0,0,420,422,5,92,0,0,421,423,5,13,0,0,422,421,1,0,0,0,422,423,
        1,0,0,0,423,424,1,0,0,0,424,425,5,10,0,0,425,426,1,0,0,0,426,427,
        6,40,4,0,427,86,1,0,0,0,428,433,3,121,58,0,429,432,3,121,58,0,430,
        432,7,6,0,0,431,429,1,0,0,0,431,430,1,0,0,0,432,435,1,0,0,0,433,
        431,1,0,0,0,433,434,1,0,0,0,434,445,1,0,0,0,435,433,1,0,0,0,436,
        441,5,40,0,0,437,440,3,121,58,0,438,440,7,7,0,0,439,437,1,0,0,0,
        439,438,1,0,0,0,440,443,1,0,0,0,441,439,1,0,0,0,441,442,1,0,0,0,
        442,444,1,0,0,0,443,441,1,0,0,0,444,446,5,41,0,0,445,436,1,0,0,0,
        445,446,1,0,0,0,446,447,1,0,0,0,447,448,6,41,7,0,448,449,6,41,2,
        0,449,88,1,0,0,0,450,452,5,92,0,0,451,453,5,13,0,0,452,451,1,0,0,
        0,452,453,1,0,0,0,453,454,1,0,0,0,454,455,5,10,0,0,455,456,1,0,0,
        0,456,457,6,42,4,0,457,90,1,0,0,0,458,459,5,92,0,0,459,460,9,0,0,
        0,460,461,1,0,0,0,461,462,6,43,8,0,462,92,1,0,0,0,463,465,5,13,0,
        0,464,463,1,0,0,0,464,465,1,0,0,0,465,466,1,0,0,0,466,467,5,10,0,
        0,467,468,1,0,0,0,468,469,6,44,9,0,469,470,6,44,5,0,470,94,1,0,0,
        0,471,472,5,47,0,0,472,473,5,42,0,0,473,477,1,0,0,0,474,476,9,0,
        0,0,475,474,1,0,0,0,476,479,1,0,0,0,477,478,1,0,0,0,477,475,1,0,
        0,0,478,480,1,0,0,0,479,477,1,0,0,0,480,481,5,42,0,0,481,482,5,47,
        0,0,482,483,1,0,0,0,483,484,6,45,6,0,484,485,6,45,10,0,485,96,1,
        0,0,0,486,487,5,47,0,0,487,488,5,47,0,0,488,492,1,0,0,0,489,491,
        8,0,0,0,490,489,1,0,0,0,491,494,1,0,0,0,492,490,1,0,0,0,492,493,
        1,0,0,0,493,495,1,0,0,0,494,492,1,0,0,0,495,496,6,46,6,0,496,497,
        6,46,11,0,497,98,1,0,0,0,498,499,5,47,0,0,499,500,8,8,0,0,500,501,
        1,0,0,0,501,502,6,47,8,0,502,100,1,0,0,0,503,504,5,34,0,0,504,505,
        1,0,0,0,505,506,6,48,8,0,506,507,6,48,12,0,507,102,1,0,0,0,508,510,
        8,9,0,0,509,508,1,0,0,0,510,511,1,0,0,0,511,509,1,0,0,0,511,512,
        1,0,0,0,512,104,1,0,0,0,513,514,5,92,0,0,514,515,9,0,0,0,515,516,
        1,0,0,0,516,517,6,50,8,0,517,106,1,0,0,0,518,519,5,34,0,0,519,520,
        1,0,0,0,520,521,6,51,8,0,521,522,6,51,13,0,522,108,1,0,0,0,523,525,
        8,10,0,0,524,523,1,0,0,0,525,526,1,0,0,0,526,524,1,0,0,0,526,527,
        1,0,0,0,527,528,1,0,0,0,528,529,6,52,8,0,529,110,1,0,0,0,530,531,
        5,92,0,0,531,535,7,11,0,0,532,535,3,113,54,0,533,535,3,115,55,0,
        534,530,1,0,0,0,534,532,1,0,0,0,534,533,1,0,0,0,535,112,1,0,0,0,
        536,537,5,92,0,0,537,538,7,12,0,0,538,539,7,13,0,0,539,546,7,13,
        0,0,540,541,5,92,0,0,541,542,7,13,0,0,542,546,7,13,0,0,543,544,5,
        92,0,0,544,546,7,13,0,0,545,536,1,0,0,0,545,540,1,0,0,0,545,543,
        1,0,0,0,546,114,1,0,0,0,547,548,5,92,0,0,548,549,5,117,0,0,549,550,
        3,117,56,0,550,551,3,117,56,0,551,552,3,117,56,0,552,553,3,117,56,
        0,553,116,1,0,0,0,554,555,7,14,0,0,555,118,1,0,0,0,556,562,5,34,
        0,0,557,561,8,15,0,0,558,559,5,92,0,0,559,561,9,0,0,0,560,557,1,
        0,0,0,560,558,1,0,0,0,561,564,1,0,0,0,562,560,1,0,0,0,562,563,1,
        0,0,0,563,565,1,0,0,0,564,562,1,0,0,0,565,566,5,34,0,0,566,120,1,
        0,0,0,567,573,7,16,0,0,568,573,8,17,0,0,569,570,7,18,0,0,570,573,
        7,19,0,0,571,573,7,20,0,0,572,567,1,0,0,0,572,568,1,0,0,0,572,569,
        1,0,0,0,572,571,1,0,0,0,573,122,1,0,0,0,574,575,7,21,0,0,575,124,
        1,0,0,0,576,577,7,22,0,0,577,126,1,0,0,0,578,579,7,23,0,0,579,128,
        1,0,0,0,580,581,7,24,0,0,581,130,1,0,0,0,582,583,7,25,0,0,583,132,
        1,0,0,0,584,585,7,26,0,0,585,134,1,0,0,0,586,587,7,27,0,0,587,136,
        1,0,0,0,588,589,7,28,0,0,589,138,1,0,0,0,590,591,7,29,0,0,591,140,
        1,0,0,0,592,593,7,30,0,0,593,142,1,0,0,0,594,595,7,31,0,0,595,144,
        1,0,0,0,596,597,7,32,0,0,597,146,1,0,0,0,598,599,7,33,0,0,599,148,
        1,0,0,0,600,601,7,34,0,0,601,150,1,0,0,0,602,603,7,35,0,0,603,152,
        1,0,0,0,604,605,7,36,0,0,605,154,1,0,0,0,606,607,7,37,0,0,607,156,
        1,0,0,0,608,609,7,38,0,0,609,158,1,0,0,0,610,611,7,39,0,0,611,160,
        1,0,0,0,612,613,7,40,0,0,613,162,1,0,0,0,614,615,7,41,0,0,615,164,
        1,0,0,0,616,617,7,42,0,0,617,166,1,0,0,0,618,619,7,43,0,0,619,168,
        1,0,0,0,620,621,7,44,0,0,621,170,1,0,0,0,622,623,7,45,0,0,623,172,
        1,0,0,0,624,625,7,46,0,0,625,174,1,0,0,0,40,0,1,2,3,4,185,199,211,
        224,226,239,262,349,358,360,366,371,377,384,386,389,401,415,422,
        431,433,439,441,445,452,464,477,492,511,526,534,545,560,562,572,
        14,2,1,0,7,2,0,2,3,0,2,2,0,0,1,0,2,0,0,0,2,0,7,30,0,7,38,0,7,33,
        0,7,34,0,7,35,0,5,4,0,4,0,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!LPCPreprocessorLexer.__ATN) {
            LPCPreprocessorLexer.__ATN = new antlr.ATNDeserializer().deserialize(LPCPreprocessorLexer._serializedATN);
        }

        return LPCPreprocessorLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(LPCPreprocessorLexer.literalNames, LPCPreprocessorLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return LPCPreprocessorLexer.vocabulary;
    }

    private static readonly decisionsToDFA = LPCPreprocessorLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}