// Generated from grammar/LPCPreprocessorLexer.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class LPCPreprocessorLexer extends antlr.Lexer {
    public static readonly SHARP = 1;
    public static readonly CODE = 2;
    public static readonly INCLUDE = 3;
    public static readonly PRAGMA = 4;
    public static readonly DEFINE = 5;
    public static readonly DEFINED = 6;
    public static readonly IF = 7;
    public static readonly ELIF = 8;
    public static readonly ELSE = 9;
    public static readonly UNDEF = 10;
    public static readonly IFDEF = 11;
    public static readonly IFNDEF = 12;
    public static readonly ENDIF = 13;
    public static readonly BANG = 14;
    public static readonly LPAREN = 15;
    public static readonly RPAREN = 16;
    public static readonly EQUAL = 17;
    public static readonly NOTEQUAL = 18;
    public static readonly AND = 19;
    public static readonly OR = 20;
    public static readonly LT = 21;
    public static readonly GT = 22;
    public static readonly LE = 23;
    public static readonly GE = 24;
    public static readonly STAR = 25;
    public static readonly DIRECTIVE_WHITESPACES = 26;
    public static readonly DIRECTIVE_STRING = 27;
    public static readonly CONDITIONAL_SYMBOL = 28;
    public static readonly DECIMAL_LITERAL = 29;
    public static readonly FLOAT = 30;
    public static readonly NEW_LINE = 31;
    public static readonly DIRECITVE_COMMENT = 32;
    public static readonly DIRECITVE_LINE_COMMENT = 33;
    public static readonly DIRECITVE_NEW_LINE = 34;
    public static readonly DIRECITVE_TEXT_NEW_LINE = 35;
    public static readonly TEXT = 36;
    public static readonly SLASH = 37;
    public static readonly DIRECTIVE_MODE = 1;
    public static readonly DIRECTIVE_DEFINE = 2;
    public static readonly DIRECTIVE_TEXT = 3;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS_CHANNEL"
    ];

    public static readonly literalNames = [
        null, "'#'", null, null, "'pragma'", null, "'defined'", "'if'", 
        "'elif'", "'else'", "'undef'", "'ifdef'", "'ifndef'", "'endif'", 
        "'!'", "'('", "')'", "'=='", "'!='", "'&&'", "'||'", "'<'", "'>'", 
        "'<='", "'>='", "'*'"
    ];

    public static readonly symbolicNames = [
        null, "SHARP", "CODE", "INCLUDE", "PRAGMA", "DEFINE", "DEFINED", 
        "IF", "ELIF", "ELSE", "UNDEF", "IFDEF", "IFNDEF", "ENDIF", "BANG", 
        "LPAREN", "RPAREN", "EQUAL", "NOTEQUAL", "AND", "OR", "LT", "GT", 
        "LE", "GE", "STAR", "DIRECTIVE_WHITESPACES", "DIRECTIVE_STRING", 
        "CONDITIONAL_SYMBOL", "DECIMAL_LITERAL", "FLOAT", "NEW_LINE", "DIRECITVE_COMMENT", 
        "DIRECITVE_LINE_COMMENT", "DIRECITVE_NEW_LINE", "DIRECITVE_TEXT_NEW_LINE", 
        "TEXT", "SLASH"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE", "DIRECTIVE_MODE", "DIRECTIVE_DEFINE", "DIRECTIVE_TEXT",
    ];

    public static readonly ruleNames = [
        "SHARP", "COMMENT", "LINE_COMMENT", "SLASH", "CHARACTER_LITERAL", 
        "STRING", "CODE", "INCLUDE", "PRAGMA", "DEFINE", "DEFINED", "IF", 
        "ELIF", "ELSE", "UNDEF", "IFDEF", "IFNDEF", "ENDIF", "BANG", "LPAREN", 
        "RPAREN", "EQUAL", "NOTEQUAL", "AND", "OR", "LT", "GT", "LE", "GE", 
        "STAR", "DIRECTIVE_WHITESPACES", "DIRECTIVE_STRING", "CONDITIONAL_SYMBOL", 
        "DECIMAL_LITERAL", "FLOAT", "NEW_LINE", "DIRECITVE_COMMENT", "DIRECITVE_LINE_COMMENT", 
        "DIRECITVE_NEW_LINE", "DIRECTIVE_DEFINE_CONDITIONAL_SYMBOL", "DIRECITVE_TEXT_NEW_LINE", 
        "BACK_SLASH_ESCAPE", "TEXT_NEW_LINE", "DIRECTIVE_COMMENT", "DIRECTIVE_LINE_COMMENT", 
        "DIRECTIVE_SLASH", "TEXT", "EscapeSequence", "OctalEscape", "UnicodeEscape", 
        "HexDigit", "StringFragment", "LETTER", "A", "B", "C", "D", "E", 
        "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", 
        "S", "T", "U", "V", "W", "X", "Y", "Z",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, LPCPreprocessorLexer._ATN, LPCPreprocessorLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "LPCPreprocessorLexer.g4"; }

    public get literalNames(): (string | null)[] { return LPCPreprocessorLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return LPCPreprocessorLexer.symbolicNames; }
    public get ruleNames(): string[] { return LPCPreprocessorLexer.ruleNames; }

    public get serializedATN(): number[] { return LPCPreprocessorLexer._serializedATN; }

    public get channelNames(): string[] { return LPCPreprocessorLexer.channelNames; }

    public get modeNames(): string[] { return LPCPreprocessorLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,37,586,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
        4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
        2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,
        7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,
        2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,
        7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,
        2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,
        7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,
        2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,
        7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,
        2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
        7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,
        2,77,7,77,2,78,7,78,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,171,8,1,
        10,1,12,1,174,9,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,185,8,
        2,10,2,12,2,188,9,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,3,4,199,
        8,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,4,6,212,8,6,11,6,
        12,6,213,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,4,7,225,8,7,11,7,12,
        7,226,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,4,9,248,8,9,11,9,12,9,249,1,9,1,9,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
        12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,
        15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,
        21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,
        26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,30,4,30,331,8,30,11,
        30,12,30,332,1,30,1,30,1,31,1,31,1,32,1,32,1,32,5,32,342,8,32,10,
        32,12,32,345,9,32,1,33,4,33,348,8,33,11,33,12,33,349,1,34,4,34,353,
        8,34,11,34,12,34,354,1,34,1,34,5,34,359,8,34,10,34,12,34,362,9,34,
        1,34,1,34,4,34,366,8,34,11,34,12,34,367,3,34,370,8,34,1,35,3,35,
        373,8,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,5,36,383,8,36,10,
        36,12,36,386,9,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,5,
        37,397,8,37,10,37,12,37,400,9,37,1,37,1,37,1,38,1,38,3,38,406,8,
        38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,5,39,415,8,39,10,39,12,39,
        418,9,39,1,39,1,39,1,39,5,39,423,8,39,10,39,12,39,426,9,39,1,39,
        3,39,429,8,39,1,39,1,39,1,39,1,40,1,40,3,40,436,8,40,1,40,1,40,1,
        40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,3,42,448,8,42,1,42,1,42,1,
        42,1,42,1,42,1,43,1,43,1,43,1,43,5,43,459,8,43,10,43,12,43,462,9,
        43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,5,44,474,8,
        44,10,44,12,44,477,9,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,
        4,46,487,8,46,11,46,12,46,488,1,47,1,47,1,47,1,47,3,47,495,8,47,
        1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,506,8,48,1,49,
        1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,51,5,51,
        521,8,51,10,51,12,51,524,9,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,
        3,52,533,8,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,
        1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,
        1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,
        1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,
        1,77,1,78,1,78,3,172,384,460,0,79,4,1,6,0,8,0,10,37,12,0,14,0,16,
        2,18,3,20,4,22,5,24,6,26,7,28,8,30,9,32,10,34,11,36,12,38,13,40,
        14,42,15,44,16,46,17,48,18,50,19,52,20,54,21,56,22,58,23,60,24,62,
        25,64,26,66,27,68,28,70,29,72,30,74,31,76,32,78,33,80,34,82,0,84,
        35,86,0,88,0,90,0,92,0,94,0,96,36,98,0,100,0,102,0,104,0,106,0,108,
        0,110,0,112,0,114,0,116,0,118,0,120,0,122,0,124,0,126,0,128,0,130,
        0,132,0,134,0,136,0,138,0,140,0,142,0,144,0,146,0,148,0,150,0,152,
        0,154,0,156,0,158,0,160,0,4,0,1,2,3,44,2,0,10,10,13,13,2,0,39,39,
        92,92,1,0,35,35,3,0,34,35,39,39,47,47,2,0,9,9,32,32,1,0,48,57,5,
        0,9,9,32,32,44,44,46,46,48,57,4,0,10,10,13,13,47,47,92,92,8,0,34,
        34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,1,0,48,51,1,
        0,48,55,3,0,48,57,65,70,97,102,2,0,34,34,92,92,4,0,36,36,65,90,95,
        95,97,122,2,0,0,255,55296,56319,1,0,55296,56319,1,0,56320,57343,
        1,0,233,233,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,
        68,68,100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,
        103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,
        75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,
        2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,
        114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,
        0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,
        121,2,0,90,90,122,122,588,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,
        10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,1,18,1,0,0,0,1,
        20,1,0,0,0,1,22,1,0,0,0,1,24,1,0,0,0,1,26,1,0,0,0,1,28,1,0,0,0,1,
        30,1,0,0,0,1,32,1,0,0,0,1,34,1,0,0,0,1,36,1,0,0,0,1,38,1,0,0,0,1,
        40,1,0,0,0,1,42,1,0,0,0,1,44,1,0,0,0,1,46,1,0,0,0,1,48,1,0,0,0,1,
        50,1,0,0,0,1,52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,
        60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,0,1,
        70,1,0,0,0,1,72,1,0,0,0,1,74,1,0,0,0,1,76,1,0,0,0,1,78,1,0,0,0,1,
        80,1,0,0,0,2,82,1,0,0,0,3,84,1,0,0,0,3,86,1,0,0,0,3,88,1,0,0,0,3,
        90,1,0,0,0,3,92,1,0,0,0,3,94,1,0,0,0,3,96,1,0,0,0,4,162,1,0,0,0,
        6,166,1,0,0,0,8,180,1,0,0,0,10,191,1,0,0,0,12,195,1,0,0,0,14,204,
        1,0,0,0,16,211,1,0,0,0,18,215,1,0,0,0,20,230,1,0,0,0,22,239,1,0,
        0,0,24,253,1,0,0,0,26,261,1,0,0,0,28,264,1,0,0,0,30,269,1,0,0,0,
        32,274,1,0,0,0,34,280,1,0,0,0,36,286,1,0,0,0,38,293,1,0,0,0,40,299,
        1,0,0,0,42,301,1,0,0,0,44,303,1,0,0,0,46,305,1,0,0,0,48,308,1,0,
        0,0,50,311,1,0,0,0,52,314,1,0,0,0,54,317,1,0,0,0,56,319,1,0,0,0,
        58,321,1,0,0,0,60,324,1,0,0,0,62,327,1,0,0,0,64,330,1,0,0,0,66,336,
        1,0,0,0,68,338,1,0,0,0,70,347,1,0,0,0,72,369,1,0,0,0,74,372,1,0,
        0,0,76,378,1,0,0,0,78,392,1,0,0,0,80,403,1,0,0,0,82,411,1,0,0,0,
        84,433,1,0,0,0,86,441,1,0,0,0,88,447,1,0,0,0,90,454,1,0,0,0,92,469,
        1,0,0,0,94,481,1,0,0,0,96,486,1,0,0,0,98,494,1,0,0,0,100,505,1,0,
        0,0,102,507,1,0,0,0,104,514,1,0,0,0,106,516,1,0,0,0,108,532,1,0,
        0,0,110,534,1,0,0,0,112,536,1,0,0,0,114,538,1,0,0,0,116,540,1,0,
        0,0,118,542,1,0,0,0,120,544,1,0,0,0,122,546,1,0,0,0,124,548,1,0,
        0,0,126,550,1,0,0,0,128,552,1,0,0,0,130,554,1,0,0,0,132,556,1,0,
        0,0,134,558,1,0,0,0,136,560,1,0,0,0,138,562,1,0,0,0,140,564,1,0,
        0,0,142,566,1,0,0,0,144,568,1,0,0,0,146,570,1,0,0,0,148,572,1,0,
        0,0,150,574,1,0,0,0,152,576,1,0,0,0,154,578,1,0,0,0,156,580,1,0,
        0,0,158,582,1,0,0,0,160,584,1,0,0,0,162,163,5,35,0,0,163,164,1,0,
        0,0,164,165,6,0,0,0,165,5,1,0,0,0,166,167,5,47,0,0,167,168,5,42,
        0,0,168,172,1,0,0,0,169,171,9,0,0,0,170,169,1,0,0,0,171,174,1,0,
        0,0,172,173,1,0,0,0,172,170,1,0,0,0,173,175,1,0,0,0,174,172,1,0,
        0,0,175,176,5,42,0,0,176,177,5,47,0,0,177,178,1,0,0,0,178,179,6,
        1,1,0,179,7,1,0,0,0,180,181,5,47,0,0,181,182,5,47,0,0,182,186,1,
        0,0,0,183,185,8,0,0,0,184,183,1,0,0,0,185,188,1,0,0,0,186,184,1,
        0,0,0,186,187,1,0,0,0,187,189,1,0,0,0,188,186,1,0,0,0,189,190,6,
        2,1,0,190,9,1,0,0,0,191,192,5,47,0,0,192,193,1,0,0,0,193,194,6,3,
        1,0,194,11,1,0,0,0,195,198,5,39,0,0,196,199,3,98,47,0,197,199,8,
        1,0,0,198,196,1,0,0,0,198,197,1,0,0,0,199,200,1,0,0,0,200,201,8,
        2,0,0,201,202,1,0,0,0,202,203,6,4,1,0,203,13,1,0,0,0,204,205,3,106,
        51,0,205,206,1,0,0,0,206,207,6,5,1,0,207,15,1,0,0,0,208,212,8,3,
        0,0,209,210,5,35,0,0,210,212,5,39,0,0,211,208,1,0,0,0,211,209,1,
        0,0,0,212,213,1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,17,1,0,
        0,0,215,216,5,105,0,0,216,217,5,110,0,0,217,218,5,99,0,0,218,219,
        5,108,0,0,219,220,5,117,0,0,220,221,5,100,0,0,221,222,5,101,0,0,
        222,224,1,0,0,0,223,225,7,4,0,0,224,223,1,0,0,0,225,226,1,0,0,0,
        226,224,1,0,0,0,226,227,1,0,0,0,227,228,1,0,0,0,228,229,6,7,2,0,
        229,19,1,0,0,0,230,231,5,112,0,0,231,232,5,114,0,0,232,233,5,97,
        0,0,233,234,5,103,0,0,234,235,5,109,0,0,235,236,5,97,0,0,236,237,
        1,0,0,0,237,238,6,8,2,0,238,21,1,0,0,0,239,240,5,100,0,0,240,241,
        5,101,0,0,241,242,5,102,0,0,242,243,5,105,0,0,243,244,5,110,0,0,
        244,245,5,101,0,0,245,247,1,0,0,0,246,248,7,4,0,0,247,246,1,0,0,
        0,248,249,1,0,0,0,249,247,1,0,0,0,249,250,1,0,0,0,250,251,1,0,0,
        0,251,252,6,9,3,0,252,23,1,0,0,0,253,254,5,100,0,0,254,255,5,101,
        0,0,255,256,5,102,0,0,256,257,5,105,0,0,257,258,5,110,0,0,258,259,
        5,101,0,0,259,260,5,100,0,0,260,25,1,0,0,0,261,262,5,105,0,0,262,
        263,5,102,0,0,263,27,1,0,0,0,264,265,5,101,0,0,265,266,5,108,0,0,
        266,267,5,105,0,0,267,268,5,102,0,0,268,29,1,0,0,0,269,270,5,101,
        0,0,270,271,5,108,0,0,271,272,5,115,0,0,272,273,5,101,0,0,273,31,
        1,0,0,0,274,275,5,117,0,0,275,276,5,110,0,0,276,277,5,100,0,0,277,
        278,5,101,0,0,278,279,5,102,0,0,279,33,1,0,0,0,280,281,5,105,0,0,
        281,282,5,102,0,0,282,283,5,100,0,0,283,284,5,101,0,0,284,285,5,
        102,0,0,285,35,1,0,0,0,286,287,5,105,0,0,287,288,5,102,0,0,288,289,
        5,110,0,0,289,290,5,100,0,0,290,291,5,101,0,0,291,292,5,102,0,0,
        292,37,1,0,0,0,293,294,5,101,0,0,294,295,5,110,0,0,295,296,5,100,
        0,0,296,297,5,105,0,0,297,298,5,102,0,0,298,39,1,0,0,0,299,300,5,
        33,0,0,300,41,1,0,0,0,301,302,5,40,0,0,302,43,1,0,0,0,303,304,5,
        41,0,0,304,45,1,0,0,0,305,306,5,61,0,0,306,307,5,61,0,0,307,47,1,
        0,0,0,308,309,5,33,0,0,309,310,5,61,0,0,310,49,1,0,0,0,311,312,5,
        38,0,0,312,313,5,38,0,0,313,51,1,0,0,0,314,315,5,124,0,0,315,316,
        5,124,0,0,316,53,1,0,0,0,317,318,5,60,0,0,318,55,1,0,0,0,319,320,
        5,62,0,0,320,57,1,0,0,0,321,322,5,60,0,0,322,323,5,61,0,0,323,59,
        1,0,0,0,324,325,5,62,0,0,325,326,5,61,0,0,326,61,1,0,0,0,327,328,
        5,42,0,0,328,63,1,0,0,0,329,331,7,4,0,0,330,329,1,0,0,0,331,332,
        1,0,0,0,332,330,1,0,0,0,332,333,1,0,0,0,333,334,1,0,0,0,334,335,
        6,30,4,0,335,65,1,0,0,0,336,337,3,106,51,0,337,67,1,0,0,0,338,343,
        3,108,52,0,339,342,3,108,52,0,340,342,7,5,0,0,341,339,1,0,0,0,341,
        340,1,0,0,0,342,345,1,0,0,0,343,341,1,0,0,0,343,344,1,0,0,0,344,
        69,1,0,0,0,345,343,1,0,0,0,346,348,7,5,0,0,347,346,1,0,0,0,348,349,
        1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,71,1,0,0,0,351,353,7,
        5,0,0,352,351,1,0,0,0,353,354,1,0,0,0,354,352,1,0,0,0,354,355,1,
        0,0,0,355,356,1,0,0,0,356,360,5,46,0,0,357,359,7,5,0,0,358,357,1,
        0,0,0,359,362,1,0,0,0,360,358,1,0,0,0,360,361,1,0,0,0,361,370,1,
        0,0,0,362,360,1,0,0,0,363,365,5,46,0,0,364,366,7,5,0,0,365,364,1,
        0,0,0,366,367,1,0,0,0,367,365,1,0,0,0,367,368,1,0,0,0,368,370,1,
        0,0,0,369,352,1,0,0,0,369,363,1,0,0,0,370,73,1,0,0,0,371,373,5,13,
        0,0,372,371,1,0,0,0,372,373,1,0,0,0,373,374,1,0,0,0,374,375,5,10,
        0,0,375,376,1,0,0,0,376,377,6,35,5,0,377,75,1,0,0,0,378,379,5,47,
        0,0,379,380,5,42,0,0,380,384,1,0,0,0,381,383,9,0,0,0,382,381,1,0,
        0,0,383,386,1,0,0,0,384,385,1,0,0,0,384,382,1,0,0,0,385,387,1,0,
        0,0,386,384,1,0,0,0,387,388,5,42,0,0,388,389,5,47,0,0,389,390,1,
        0,0,0,390,391,6,36,6,0,391,77,1,0,0,0,392,393,5,47,0,0,393,394,5,
        47,0,0,394,398,1,0,0,0,395,397,8,0,0,0,396,395,1,0,0,0,397,400,1,
        0,0,0,398,396,1,0,0,0,398,399,1,0,0,0,399,401,1,0,0,0,400,398,1,
        0,0,0,401,402,6,37,6,0,402,79,1,0,0,0,403,405,5,92,0,0,404,406,5,
        13,0,0,405,404,1,0,0,0,405,406,1,0,0,0,406,407,1,0,0,0,407,408,5,
        10,0,0,408,409,1,0,0,0,409,410,6,38,4,0,410,81,1,0,0,0,411,416,3,
        108,52,0,412,415,3,108,52,0,413,415,7,5,0,0,414,412,1,0,0,0,414,
        413,1,0,0,0,415,418,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,
        428,1,0,0,0,418,416,1,0,0,0,419,424,5,40,0,0,420,423,3,108,52,0,
        421,423,7,6,0,0,422,420,1,0,0,0,422,421,1,0,0,0,423,426,1,0,0,0,
        424,422,1,0,0,0,424,425,1,0,0,0,425,427,1,0,0,0,426,424,1,0,0,0,
        427,429,5,41,0,0,428,419,1,0,0,0,428,429,1,0,0,0,429,430,1,0,0,0,
        430,431,6,39,7,0,431,432,6,39,2,0,432,83,1,0,0,0,433,435,5,92,0,
        0,434,436,5,13,0,0,435,434,1,0,0,0,435,436,1,0,0,0,436,437,1,0,0,
        0,437,438,5,10,0,0,438,439,1,0,0,0,439,440,6,40,4,0,440,85,1,0,0,
        0,441,442,5,92,0,0,442,443,9,0,0,0,443,444,1,0,0,0,444,445,6,41,
        8,0,445,87,1,0,0,0,446,448,5,13,0,0,447,446,1,0,0,0,447,448,1,0,
        0,0,448,449,1,0,0,0,449,450,5,10,0,0,450,451,1,0,0,0,451,452,6,42,
        9,0,452,453,6,42,5,0,453,89,1,0,0,0,454,455,5,47,0,0,455,456,5,42,
        0,0,456,460,1,0,0,0,457,459,9,0,0,0,458,457,1,0,0,0,459,462,1,0,
        0,0,460,461,1,0,0,0,460,458,1,0,0,0,461,463,1,0,0,0,462,460,1,0,
        0,0,463,464,5,42,0,0,464,465,5,47,0,0,465,466,1,0,0,0,466,467,6,
        43,6,0,467,468,6,43,10,0,468,91,1,0,0,0,469,470,5,47,0,0,470,471,
        5,47,0,0,471,475,1,0,0,0,472,474,8,0,0,0,473,472,1,0,0,0,474,477,
        1,0,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,478,1,0,0,0,477,475,
        1,0,0,0,478,479,6,44,6,0,479,480,6,44,11,0,480,93,1,0,0,0,481,482,
        5,47,0,0,482,483,1,0,0,0,483,484,6,45,8,0,484,95,1,0,0,0,485,487,
        8,7,0,0,486,485,1,0,0,0,487,488,1,0,0,0,488,486,1,0,0,0,488,489,
        1,0,0,0,489,97,1,0,0,0,490,491,5,92,0,0,491,495,7,8,0,0,492,495,
        3,100,48,0,493,495,3,102,49,0,494,490,1,0,0,0,494,492,1,0,0,0,494,
        493,1,0,0,0,495,99,1,0,0,0,496,497,5,92,0,0,497,498,7,9,0,0,498,
        499,7,10,0,0,499,506,7,10,0,0,500,501,5,92,0,0,501,502,7,10,0,0,
        502,506,7,10,0,0,503,504,5,92,0,0,504,506,7,10,0,0,505,496,1,0,0,
        0,505,500,1,0,0,0,505,503,1,0,0,0,506,101,1,0,0,0,507,508,5,92,0,
        0,508,509,5,117,0,0,509,510,3,104,50,0,510,511,3,104,50,0,511,512,
        3,104,50,0,512,513,3,104,50,0,513,103,1,0,0,0,514,515,7,11,0,0,515,
        105,1,0,0,0,516,522,5,34,0,0,517,521,8,12,0,0,518,519,5,92,0,0,519,
        521,9,0,0,0,520,517,1,0,0,0,520,518,1,0,0,0,521,524,1,0,0,0,522,
        520,1,0,0,0,522,523,1,0,0,0,523,525,1,0,0,0,524,522,1,0,0,0,525,
        526,5,34,0,0,526,107,1,0,0,0,527,533,7,13,0,0,528,533,8,14,0,0,529,
        530,7,15,0,0,530,533,7,16,0,0,531,533,7,17,0,0,532,527,1,0,0,0,532,
        528,1,0,0,0,532,529,1,0,0,0,532,531,1,0,0,0,533,109,1,0,0,0,534,
        535,7,18,0,0,535,111,1,0,0,0,536,537,7,19,0,0,537,113,1,0,0,0,538,
        539,7,20,0,0,539,115,1,0,0,0,540,541,7,21,0,0,541,117,1,0,0,0,542,
        543,7,22,0,0,543,119,1,0,0,0,544,545,7,23,0,0,545,121,1,0,0,0,546,
        547,7,24,0,0,547,123,1,0,0,0,548,549,7,25,0,0,549,125,1,0,0,0,550,
        551,7,26,0,0,551,127,1,0,0,0,552,553,7,27,0,0,553,129,1,0,0,0,554,
        555,7,28,0,0,555,131,1,0,0,0,556,557,7,29,0,0,557,133,1,0,0,0,558,
        559,7,30,0,0,559,135,1,0,0,0,560,561,7,31,0,0,561,137,1,0,0,0,562,
        563,7,32,0,0,563,139,1,0,0,0,564,565,7,33,0,0,565,141,1,0,0,0,566,
        567,7,34,0,0,567,143,1,0,0,0,568,569,7,35,0,0,569,145,1,0,0,0,570,
        571,7,36,0,0,571,147,1,0,0,0,572,573,7,37,0,0,573,149,1,0,0,0,574,
        575,7,38,0,0,575,151,1,0,0,0,576,577,7,39,0,0,577,153,1,0,0,0,578,
        579,7,40,0,0,579,155,1,0,0,0,580,581,7,41,0,0,581,157,1,0,0,0,582,
        583,7,42,0,0,583,159,1,0,0,0,584,585,7,43,0,0,585,161,1,0,0,0,38,
        0,1,2,3,172,186,198,211,213,226,249,332,341,343,349,354,360,367,
        369,372,384,398,405,414,416,422,424,428,435,447,460,475,488,494,
        505,520,522,532,12,2,1,0,7,2,0,2,3,0,2,2,0,0,1,0,2,0,0,0,2,0,7,28,
        0,7,36,0,7,31,0,7,32,0,7,33,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!LPCPreprocessorLexer.__ATN) {
            LPCPreprocessorLexer.__ATN = new antlr.ATNDeserializer().deserialize(LPCPreprocessorLexer._serializedATN);
        }

        return LPCPreprocessorLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(LPCPreprocessorLexer.literalNames, LPCPreprocessorLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return LPCPreprocessorLexer.vocabulary;
    }

    private static readonly decisionsToDFA = LPCPreprocessorLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}